{"version":3,"sources":["webpack://static-pack/./src/index.js","webpack://static-pack/./js_modules/components/navtoggle.js","webpack://static-pack/./js_modules/components/quize.js","webpack://static-pack/./js_modules/components/history.js","webpack://static-pack/./js_modules/components/detailPage.js"],"names":["class","toggleBar","this","nav","document","querySelector","addEventListener","e","target","remove","window","onresize","innerWidth","classList","contains","add","element","onclick","toggle","innerHTML","selector","option","save","$back","send","confimation_area","verification_btn","goback","forms","event","preventDefault","style","display","sendData","show_confimation_area","console","log","form","fetch","action","method","body","FormData","headers","then","response","json","data","errors","location","href","getElementById","result","confirm","history","back","updateNumber","querySelectorAll","length","sendReplay","commentForm","toggleReplayText","toggleReplayForm","forEach","onmouseenter","x","opacity","onmouseleave","replayBtn","i","id","getAttribute","commentArticle","commentWrapper","parentNode","currentReplay_id","hidden","value","reset","sendComment","component","options","elements","intersetion","IntersectionObserver","entries","op","entry","isIntersecting","unobserve","root","rootMargin","threshold","observe"],"mappings":"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","file":"app.js","sourcesContent":["import NavigationBar from \"../js_modules/components/navtoggle\"\r\nimport History from \"../js_modules/components/history\"\r\nimport Comments from \"../js_modules/components/detailPage\"\r\nimport Quize from \"../js_modules/components/quize\";\r\nimport Intersection from \"../js_modules/components/observer\"\r\n\r\n// creation de l'array\r\n\r\n\r\n//losque .hello est trouvé dans la page, la c\r\nconst components = [\r\n\r\n    {\r\n        class:NavigationBar,\r\n        selector:\"#toggle-bar\",\r\n        option:{\r\n            save:false\r\n        }\r\n    },\r\n    {\r\n        class:Quize,\r\n        selector:\"#quize-area\",\r\n    },\r\n\r\n    {\r\n        class:History,\r\n        selector:\"#back\"\r\n    },\r\n    {\r\n        class:Comments,\r\n        selector:\"#numberOfComment\"\r\n    },\r\n]\r\n\r\n\r\n\r\ncomponents.forEach(component=>{\r\n    if(document.querySelector(component.selector) !== null){\r\n        document.querySelectorAll(component.selector).forEach(\r\n            element=> new component.class(element, component.options))\r\n    }\r\n})\r\n\r\n\r\nif(document.querySelector('.main_page') !== null){\r\n    console.log('observer')\r\n    let elements = document.querySelectorAll(\".visible\")\r\n    const option = {\r\n        root : null,\r\n        rootMargin : \"0px\",\r\n        threshold:0.2\r\n    }\r\n\r\n    let handleIntersect = function(entries, op){\r\n         entries.forEach(entry =>{\r\n            if(entry.isIntersecting){\r\n                entry.target.classList.add(\"unvisible\")\r\n                intersetion.unobserve(entry.target)\r\n            }\r\n         })\r\n        \r\n    }\r\n        \r\n\r\n\r\n    let intersetion = new IntersectionObserver(handleIntersect, option)\r\n    elements.forEach(element => {\r\n        intersetion.observe(element)\r\n    })\r\n\r\n}","export default class NavigationBar{\r\n    constructor(toggleBar){\r\n        this.nav = document.querySelector('.header__top')\r\n        //événement pour les messages de django\r\n\r\n        if( document.querySelector(\".dj-messages\") !== null){\r\n            document.querySelector(\".dj-messages\").addEventListener(\"click\", e=>{\r\n                e.target.remove()\r\n            })\r\n        }\r\n        \r\n        //à chaque fois que la fenetre change de largeurs\r\n        window.onresize = function(e){\r\n            if(window.innerWidth > 700 && !document.querySelector('.header__top').classList.contains(\"show\")){\r\n                document.querySelector('.header__top').classList.add(\"show\")\r\n            }\r\n        }\r\n\r\n        // let toggle = document.getElementById('toggle-bar');\r\n        this.element = toggleBar\r\n        this.element.onclick = (e)=>{\r\n                this.toggle()\r\n            }     \r\n    }\r\n\r\n    toggle(){\r\n            if(!this.nav.classList.contains(\"show\")){\r\n                this.nav.classList.add(\"show\")\r\n                    this.nav.classList.remove(\"hide\")\r\n                    this.element.innerHTML = ` <span>&times;</span>`\r\n                    \r\n                }else{\r\n                    this.nav.classList.add(\"hide\")\r\n                    this.nav.classList.remove(\"show\")\r\n                    this.element.innerHTML = ` <span>&#9776;</span>`\r\n                    \r\n                }\r\n            }       \r\n}","export default class Quize{\r\n    constructor(){\r\n        // notre élément est quize-send-btn\r\n        //\r\n        this.$back = document.querySelector(\".back-btn\")\r\n        this.send = document.querySelector(\".send-btn\")\r\n        this.confimation_area = document.querySelector(\"#confirm\")\r\n        this.verification_btn = document.querySelector(\".verify\")\r\n        //retour à la confimation\r\n        this.$back.onclick = e=>{\r\n            this.goback()\r\n        }\r\n        // envoie des données et attendes de resulat\r\n        document.forms[0].addEventListener(\"submit\", event=>{\r\n            event.preventDefault()\r\n            document.querySelector(\"#confirm\").style.display = \"none\"\r\n            document.querySelector(\".loader\").classList.toggle(\"fade-out-loader\")\r\n            this.sendData(event.target)\r\n            \r\n        })\r\n\r\n\r\n        //affiche la section de confimation\r\n        this.verification_btn.onclick = e=>{\r\n            this.show_confimation_area()\r\n        }\r\n        //   \r\n        \r\n    }\r\n\r\n    goback(){console.log(\"enythinsg\");\r\n        this.confimation_area.style.display = \"none\"\r\n        this.verification_btn.style.display = \"block\"\r\n    }\r\n    show_confimation_area(){\r\n        this.confimation_area.style.display = \"block\"\r\n        this.verification_btn.style.display = \"none\"\r\n    }\r\n\r\n\r\n   sendData(form){\r\n        fetch(form.action, {\r\n            method:\"POST\",\r\n            body:new FormData(form),\r\n            headers:{\r\n                \"X-Requested-With\":\"XMLHttpRequest\"\r\n            }\r\n        }).then(response => response.json())\r\n        .then(function(data){\r\n            if(data.errors){\r\n                location.href = data.errors\r\n            }else{\r\n                document.querySelector(\".loader\").classList.toggle(\"fade-out-loader\")\r\n                console.log(data)\r\n                document.getElementById(\"resutat\").innerHTML = data.result\r\n            }\r\n                \r\n        })\r\n   }\r\n}","\r\nexport default class History{\r\n    constructor(element){\r\n        element.onclick = function(e){\r\n            if(confirm('Voulez vous vraiment quitter cette page ?')){\r\n                window.history.back()\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n}","export default class Comments{\r\n    constructor(){\r\n        const updateNumber = function(){\r\n            document.getElementById(\"numberOfComment\").innerHTML = document.querySelectorAll(\".comment-wapper\").length + document.querySelectorAll(\".replay\").length\r\n        }\r\n        \r\n        document.getElementById(\"js-comment\").addEventListener('submit', e=>{\r\n            e.preventDefault()\r\n            sendComment()\r\n        })\r\n        \r\n        function sendComment(){\r\n            let commentForm = document.getElementById(\"js-comment\")\r\n            fetch(commentForm.action, {\r\n                method:'POST',\r\n                body:new FormData(commentForm),\r\n                headers:{\r\n                    'X-Requested-With':\"XMLHttpRequest\",\r\n                }\r\n            }).then((response)=>{return response.json()})\r\n            .then((data)=>{\r\n                commentForm.reset()\r\n                document.querySelector('#js-listing-comments').innerHTML = data.data\r\n                toggleReplayText()\r\n                toggleReplayForm()\r\n                updateNumber()\r\n        \r\n        })\r\n        }\r\n        function sendReplay (){\r\n            let commentForm = document.getElementById(\"replay-form\")\r\n            fetch(commentForm.action, {\r\n                method:'POST',\r\n                body:new FormData(commentForm),\r\n                headers:{\r\n                    'X-Requested-With':\"XMLHttpRequest\",\r\n                }\r\n            }).then((response)=>{return response.json()})\r\n            .then((data)=>{\r\n                document.querySelector('#js-listing-comments').innerHTML = data.data\r\n                toggleReplayText()\r\n                toggleReplayForm()\r\n                updateNumber()\r\n        \r\n            })\r\n        };\r\n        \r\n        \r\n        //reucpere id dans l'espce de comment\r\n        \r\n        \r\n        \r\n         function toggleReplayText(){\r\n            document.querySelectorAll(\".comment\").forEach(e =>{\r\n                e.onmouseenter = function(x){\r\n                   e.querySelector(\".replay__btn\").style.opacity = 1;\r\n                }\r\n        \r\n        \r\n                e.onmouseleave = function(x){\r\n                    e.querySelector(\".replay__btn\").style.opacity = 0;\r\n                 }\r\n            })\r\n        }\r\n        \r\n         function toggleReplayForm(){\r\n            // console.log(\"ok\")\r\n            let replayBtn = document.querySelectorAll(\".replay__btn\");\r\n            if(replayBtn.length > 0){\r\n                // si les commentaire existent dans notre page\r\n                for(let i=0; i < replayBtn.length; i++){\r\n                    replayBtn[i].addEventListener('click', function(e){\r\n                        let id= replayBtn[i].getAttribute(\"id\")\r\n                        let commentArticle = document.getElementById(id)\r\n                        if(document.getElementById(\"js-listing-comments\").querySelector(\"#replay-form\") !== null){\r\n                           document.getElementById(\"js-listing-comments\").querySelectorAll(\"#replay-form\").forEach(form =>{\r\n                               form.remove()\r\n                           })\r\n    \r\n                        }\r\n                        let commentWrapper = commentArticle.parentNode\r\n                         commentWrapper.querySelector(\".r-form\").innerHTML += document.querySelector(\"#replay-form\").parentNode.innerHTML;\r\n                        document.currentReplay_id = id;\r\n                \r\n                        commentWrapper.querySelector(\"#replay-form\").addEventListener(\"submit\", e=>{\r\n                            e.preventDefault()\r\n                            commentWrapper.querySelector(\"#replay-form\").hidden.value = document.currentReplay_id\r\n                            sendReplay()\r\n                        })\r\n        \r\n                        \r\n                       \r\n                    })\r\n                }\r\n            }\r\n        \r\n        }\r\n        \r\n        // #ajouter des animations de click à tout les button de commentaire\r\n        \r\n        updateNumber()\r\n        toggleReplayText()\r\n        toggleReplayForm()\r\n        \r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}